name: "Deploy App"

on:
  push:
    branches:
      - master

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Build Frontend
        working-directory: frontend
        run: |
          npm install
          npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/

  build-backend:
    runs-on: ubuntu-latest
    needs: build-frontend # only runs after the specified task is done
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: backend/src/main/resources/static
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file backend/pom.xml
      - uses: actions/upload-artifact@v4
        with:
          name: app.jar
          path: backend/target/app.jar

  push-to-dockerhub:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: app.jar
          path: backend/target
      - name: Login to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_TAG }}
          context: .
  deploy:
    name: deploy-to-render
    runs-on: ubuntu-latest
    needs: push-to-dockerhub
    environment:
      name: Deployment
      url: #Add url to web service
    steps:
      - name: Trigger Render Deploy
      - run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY }}